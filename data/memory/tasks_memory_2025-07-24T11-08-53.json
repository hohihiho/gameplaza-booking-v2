{
  "tasks": [
    {
      "id": "e511862c-92c6-40c2-bcaa-a4312e64e5fc",
      "name": "체크인 시스템 - 체크인 유스케이스 구현",
      "description": "체크인 처리를 위한 핵심 유스케이스들을 구현합니다. ProcessCheckInUseCase(초기 체크인), ConfirmPaymentUseCase(결제 확인), AdjustTimeAndAmountUseCase(시간/금액 조정) 등을 포함합니다.",
      "status": "completed",
      "dependencies": [],
      "createdAt": "2025-07-24T10:08:01.021Z",
      "updatedAt": "2025-07-24T10:16:08.884Z",
      "relatedFiles": [
        {
          "path": "/src/application/use-cases/checkin/",
          "type": "CREATE",
          "description": "체크인 유스케이스 디렉토리"
        },
        {
          "path": "/src/domain/repositories/checkin-repository.interface.ts",
          "type": "DEPENDENCY",
          "description": "체크인 리포지토리 인터페이스"
        },
        {
          "path": "/src/domain/entities/checkin.ts",
          "type": "DEPENDENCY",
          "description": "체크인 엔티티"
        }
      ],
      "implementationGuide": "각 유스케이스는 단일 책임 원칙을 따르며, 도메인 서비스를 통해 비즈니스 로직을 처리합니다. 리포지토리를 통한 영속성 관리와 적절한 에러 처리를 포함합니다.",
      "verificationCriteria": "각 유스케이스가 해당 비즈니스 규칙을 정확히 구현하고, 적절한 에러 처리와 함께 단위 테스트가 작성되어야 합니다.",
      "summary": "체크인 처리를 위한 핵심 유스케이스 3개(ProcessCheckInUseCase, ConfirmPaymentUseCase, AdjustTimeAndAmountUseCase)를 구현하고 각각에 대한 완전한 단위 테스트를 작성했습니다. 모든 테스트가 통과하였습니다.",
      "completedAt": "2025-07-24T10:16:08.883Z"
    },
    {
      "id": "82d21230-ff02-4719-884e-fb00326f69f6",
      "name": "체크인 시스템 - 체크아웃 유스케이스 구현",
      "description": "체크아웃 처리를 위한 유스케이스들을 구현합니다. ProcessCheckOutUseCase(체크아웃 처리), GetCheckInDetailsUseCase(체크인 상세 조회), GetActiveCheckInsUseCase(활성 체크인 목록 조회) 등을 포함합니다.",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "e511862c-92c6-40c2-bcaa-a4312e64e5fc"
        }
      ],
      "createdAt": "2025-07-24T10:08:01.021Z",
      "updatedAt": "2025-07-24T10:30:27.061Z",
      "relatedFiles": [
        {
          "path": "/src/application/use-cases/checkin/",
          "type": "TO_MODIFY",
          "description": "체크인 유스케이스 디렉토리"
        },
        {
          "path": "/src/application/dto/checkin.dto.ts",
          "type": "CREATE",
          "description": "체크인 DTO 정의"
        }
      ],
      "implementationGuide": "체크아웃 시 실제 사용 시간 계산, 최종 금액 확정, 상태 변경 등의 로직을 구현합니다. 조회 유스케이스는 효율적인 쿼리와 적절한 DTO 변환을 포함합니다.",
      "verificationCriteria": "체크아웃 프로세스가 정확히 동작하고, 조회 기능이 필요한 데이터를 효율적으로 반환해야 합니다.",
      "summary": "체크아웃 유스케이스 구현 완료. ProcessCheckOutUseCase, GetCheckInDetailsUseCase, GetActiveCheckInsUseCase, GetCheckInsByDateRangeUseCase 구현. 모든 테스트 통과 (47개 테스트 성공)",
      "completedAt": "2025-07-24T10:30:27.060Z"
    },
    {
      "id": "a5742aa9-6b55-4162-b019-1b7ac83a7ca7",
      "name": "체크인 시스템 - API 엔드포인트 구현",
      "description": "체크인/체크아웃 관련 REST API 엔드포인트를 구현합니다. POST /api/checkins (체크인), PATCH /api/checkins/:id/payment (결제 확인), PATCH /api/checkins/:id/checkout (체크아웃), GET /api/checkins (목록 조회) 등을 포함합니다.",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "e511862c-92c6-40c2-bcaa-a4312e64e5fc"
        },
        {
          "taskId": "82d21230-ff02-4719-884e-fb00326f69f6"
        }
      ],
      "createdAt": "2025-07-24T10:08:01.021Z",
      "updatedAt": "2025-07-24T10:43:10.199Z",
      "relatedFiles": [
        {
          "path": "/app/api/checkins/route.ts",
          "type": "CREATE",
          "description": "체크인 목록/생성 API"
        },
        {
          "path": "/app/api/checkins/[id]/route.ts",
          "type": "CREATE",
          "description": "체크인 상세/수정 API"
        },
        {
          "path": "/app/api/checkins/[id]/payment/route.ts",
          "type": "CREATE",
          "description": "결제 확인 API"
        },
        {
          "path": "/app/api/checkins/[id]/checkout/route.ts",
          "type": "CREATE",
          "description": "체크아웃 API"
        }
      ],
      "implementationGuide": "Next.js App Router를 사용하여 API 라우트를 구현합니다. 적절한 인증/인가 검증, 요청 검증, 에러 응답 처리를 포함합니다.",
      "verificationCriteria": "모든 API 엔드포인트가 올바른 HTTP 메서드와 상태 코드를 반환하고, 적절한 에러 처리와 인증이 구현되어야 합니다.",
      "summary": "체크인 시스템 API 엔드포인트 구현 완료. POST/GET/PATCH 총 7개 API 구현, 에러 핸들링/응답 표준화 유틸리티 생성, 인증/인가 미들웨어 적용, 상세 API 문서 작성 완료",
      "completedAt": "2025-07-24T10:43:10.199Z"
    }
  ]
}